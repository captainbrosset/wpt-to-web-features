{
  "request-animation-frame-workers": [
    {
      "testPath": "workers",
      "testFiles": [
        "WorkerGlobalScope_requestAnimationFrame.worker.js"
      ]
    }
  ],
  "ua-client-hints": [
    {
      "testPath": "workers",
      "testFiles": [
        "WorkerNavigator_userAgentData.http.html",
        "WorkerNavigator_userAgentData.https.html",
        "WorkerNavigator_userAgentData.https.tentative.html"
      ]
    },
    {
      "testPath": "ua-client-hints",
      "testFiles": "**"
    },
    {
      "testPath": "client-hints/permissions-policy",
      "testFiles": "**"
    },
    {
      "testPath": "html/webappapis/system-state-and-capabilities/the-navigator-object",
      "testFiles": [
        "navigator_user_agent.tentative.html",
        "navigator_user_agent.https.tentative.html"
      ]
    }
  ],
  "webusb": [
    {
      "testPath": "webusb",
      "testFiles": "**"
    }
  ],
  "webtransport": [
    {
      "testPath": "webtransport",
      "testFiles": "**"
    }
  ],
  "webrtc-encoded-transform": [
    {
      "testPath": "webrtc-encoded-transform",
      "testFiles": "**"
    }
  ],
  "web-midi": [
    {
      "testPath": "webmidi",
      "testFiles": "**"
    }
  ],
  "webhid": [
    {
      "testPath": "webhid",
      "testFiles": "**"
    }
  ],
  "messageerror": [
    {
      "testPath": "webmessaging",
      "testFiles": [
        "messageerror.html",
        "postMessage_CryptoKey_insecure.sub.html"
      ]
    }
  ],
  "webrtc-sctp": [
    {
      "testPath": "webrtc",
      "testFiles": [
        "RTCSctpTransport-*"
      ]
    }
  ],
  "webauthn-public-key-easy": [
    {
      "testPath": "webauthn",
      "testFiles": [
        "createcredential-getpublickey.https.html"
      ]
    }
  ],
  "webcodecs": [
    {
      "testPath": "webcodecs",
      "testFiles": "**"
    }
  ],
  "web-locks": [
    {
      "testPath": "web-locks",
      "testFiles": "**"
    }
  ],
  "web-animations": [
    {
      "testPath": "web-animations",
      "testFiles": "**"
    }
  ],
  "visual-viewport": [
    {
      "testPath": "visual-viewport",
      "testFiles": "**"
    }
  ],
  "viewport-segments": [
    {
      "testPath": "viewport-segments",
      "testFiles": "**"
    }
  ],
  "viewport": [
    {
      "testPath": "viewport",
      "testFiles": "**"
    }
  ],
  "request-video-frame-callback": [
    {
      "testPath": "video-rvfc",
      "testFiles": "**"
    }
  ],
  "urlpattern": [
    {
      "testPath": "urlpattern",
      "testFiles": "**"
    }
  ],
  "url-canparse": [
    {
      "testPath": "url",
      "testFiles": [
        "url-statics-canparse.*"
      ]
    }
  ],
  "trusted-types": [
    {
      "testPath": "trusted-types",
      "testFiles": "**"
    }
  ],
  "streams": [
    {
      "testPath": "streams",
      "testFiles": [
        "*"
      ]
    },
    {
      "testPath": "streams/writable-streams",
      "testFiles": "**"
    },
    {
      "testPath": "streams/transform-streams",
      "testFiles": [
        "*",
        "!cancel.any.js"
      ]
    },
    {
      "testPath": "streams/readable-streams",
      "testFiles": [
        "*",
        "!async-iterator.any.js",
        "!from.any.js",
        "!owning-type*"
      ]
    },
    {
      "testPath": "streams/piping",
      "testFiles": "**"
    },
    {
      "testPath": "streams/readable-streams/crashtests",
      "testFiles": [
        "strategy-worker.js"
      ]
    }
  ],
  "storage-access": [
    {
      "testPath": "storage-access-api",
      "testFiles": "**"
    }
  ],
  "speech-recognition": [
    {
      "testPath": "speech-api",
      "testFiles": [
        "SpeechRecognition*"
      ]
    }
  ],
  "speech-synthesis": [
    {
      "testPath": "speech-api",
      "testFiles": [
        "SpeechSynthesis*"
      ]
    }
  ],
  "speculation-rules": [
    {
      "testPath": "speculation-rules",
      "testFiles": "**"
    }
  ],
  "server-timing": [
    {
      "testPath": "server-timing",
      "testFiles": "**"
    }
  ],
  "shadow-dom": [
    {
      "testPath": "shadow-dom",
      "testFiles": "**"
    }
  ],
  "slot-assign": [
    {
      "testPath": "shadow-dom",
      "testFiles": [
        "imperative-slot-*"
      ]
    }
  ],
  "document-caretpositionfrompoint": [
    {
      "testPath": "shadow-dom",
      "testFiles": [
        "Document-caretPositionFromPoint.tentative.html"
      ]
    },
    {
      "testPath": "css/cssom",
      "testFiles": [
        "caretPositionFromPoint-with-transformation.html",
        "caretPositionFromPoint.html"
      ]
    }
  ],
  "scroll-driven-animations": [
    {
      "testPath": "scroll-animations",
      "testFiles": "**"
    }
  ],
  "scroll-to-text-fragment": [
    {
      "testPath": "scroll-to-text-fragment",
      "testFiles": "**"
    },
    {
      "testPath": "html/rendering/the-details-element",
      "testFiles": [
        "auto-expand-details-text-fragment.html"
      ]
    },
    {
      "testPath": "html/editing/the-hidden-attribute",
      "testFiles": [
        "beforematch-scroll-to-text-fragment.html",
        "hidden-until-found-text-fragment.html"
      ]
    },
    {
      "testPath": "css/css-contain/content-visibility",
      "testFiles": [
        "content-visibility-048.html",
        "content-visibility-auto-text-fragment.html"
      ]
    }
  ],
  "screen-wake-lock": [
    {
      "testPath": "screen-wake-lock",
      "testFiles": "**"
    }
  ],
  "scheduler": [
    {
      "testPath": "scheduler",
      "testFiles": "**"
    }
  ],
  "requestidlecallback": [
    {
      "testPath": "requestidlecallback",
      "testFiles": "**"
    }
  ],
  "remote-playback": [
    {
      "testPath": "remote-playback",
      "testFiles": "**"
    }
  ],
  "pointer-lock": [
    {
      "testPath": "pointerlock",
      "testFiles": "**"
    }
  ],
  "modulepreload": [
    {
      "testPath": "preload",
      "testFiles": [
        "*modulepreload*"
      ]
    }
  ],
  "preloading-responsive-images": [
    {
      "testPath": "preload",
      "testFiles": [
        "dynamic-adding-preload-imagesrcset.html",
        "link-header-preload-imagesrcset.html"
      ]
    }
  ],
  "picture-in-picture": [
    {
      "testPath": "picture-in-picture",
      "testFiles": "**"
    }
  ],
  "page-visibility-state": [
    {
      "testPath": "page-visibility",
      "testFiles": [
        "visibility-state-entry.tentative.html"
      ]
    }
  ],
  "device-orientation-events": [
    {
      "testPath": "orientation-event",
      "testFiles": "**"
    }
  ],
  "navigation": [
    {
      "testPath": "navigation-api",
      "testFiles": "**"
    }
  ],
  "media-playback-quality": [
    {
      "testPath": "media-playback-quality",
      "testFiles": "**"
    }
  ],
  "mathml": [
    {
      "testPath": "mathml",
      "testFiles": "**"
    }
  ],
  "long-animation-frames": [
    {
      "testPath": "long-animation-frame",
      "testFiles": "**"
    }
  ],
  "largest-contentful-paint": [
    {
      "testPath": "largest-contentful-paint",
      "testFiles": "**"
    }
  ],
  "layout-instability": [
    {
      "testPath": "layout-instability",
      "testFiles": "**"
    }
  ],
  "profiler": [
    {
      "testPath": "js-self-profiling",
      "testFiles": "**"
    }
  ],
  "jpegxl": [
    {
      "testPath": "jpegxl",
      "testFiles": "**"
    }
  ],
  "intersection-observer": [
    {
      "testPath": "intersection-observer",
      "testFiles": "**"
    }
  ],
  "inert": [
    {
      "testPath": "inert",
      "testFiles": "**"
    }
  ],
  "import-maps": [
    {
      "testPath": "import-maps",
      "testFiles": "**"
    }
  ],
  "idle-detection": [
    {
      "testPath": "idle-detection",
      "testFiles": "**"
    }
  ],
  "html-media-capture": [
    {
      "testPath": "html-media-capture",
      "testFiles": "**"
    }
  ],
  "fullscreen": [
    {
      "testPath": "fullscreen",
      "testFiles": "**"
    }
  ],
  "forced-colors": [
    {
      "testPath": "forced-colors-mode",
      "testFiles": [
        "*"
      ]
    },
    {
      "testPath": "forced-colors-mode/backplate",
      "testFiles": [
        "*"
      ]
    },
    {
      "testPath": "css/mediaqueries",
      "testFiles": [
        "forced-colors.html"
      ]
    },
    {
      "testPath": "css/css-forced-color-adjust",
      "testFiles": [
        "*"
      ]
    },
    {
      "testPath": "css/css-forced-color-adjust/parsing",
      "testFiles": [
        "*"
      ]
    }
  ],
  "file-system-access": [
    {
      "testPath": "file-system-access",
      "testFiles": "**"
    }
  ],
  "origin-private-file-system": [
    {
      "testPath": "file-system-access",
      "testFiles": [
        "getDirectory.https.any.js",
        "opaque-origin.https.window.js"
      ]
    }
  ],
  "event-timing": [
    {
      "testPath": "event-timing",
      "testFiles": "**"
    }
  ],
  "document-picture-in-picture": [
    {
      "testPath": "document-picture-in-picture",
      "testFiles": "**"
    }
  ],
  "device-posture": [
    {
      "testPath": "device-posture",
      "testFiles": "**"
    }
  ],
  "autonomous-custom-elements": [
    {
      "testPath": "custom-elements",
      "testFiles": [
        "*",
        "!builtin-coverage.html",
        "!customized-built-in-constructor-exceptions.html",
        "!Document-createElement-customized-builtins.html",
        "!Document-createElementNS-customized-builtins.html",
        "!HTMLElement-constructor-customized-builtins.html",
        "!pseudo-class-defined-customized-builtins.html"
      ]
    },
    {
      "testPath": "custom-elements/upgrading",
      "testFiles": [
        "Document-importNode.html",
        "Node-cloneNode.html",
        "upgrading-enqueue-reactions.html",
        "upgrading-parser-created-element.html"
      ]
    },
    {
      "testPath": "custom-elements/registries",
      "testFiles": [
        "define.html",
        "per-global.html",
        "upgrade.html"
      ]
    },
    {
      "testPath": "custom-elements/reactions",
      "testFiles": "**"
    },
    {
      "testPath": "custom-elements/parser",
      "testFiles": [
        "parser-constructs-custom-element-in-document-write.html",
        "parser-constructs-custom-element-synchronously.html",
        "parser-constructs-custom-elements-with-is.html",
        "parser-constructs-custom-elements.html",
        "parser-custom-element-in-foreign-content.html",
        "parser-fallsback-to-unknown-element.html",
        "parser-sets-attributes-and-children.html",
        "parser-uses-constructed-element.html",
        "parser-uses-registry-of-owner-document.html"
      ]
    },
    {
      "testPath": "custom-elements/htmlconstructor",
      "testFiles": [
        "newtarget.html"
      ]
    }
  ],
  "customized-built-in-elements": [
    {
      "testPath": "custom-elements",
      "testFiles": [
        "builtin-coverage.html",
        "customized-built-in-constructor-exceptions.html",
        "Document-createElement-customized-builtins.html",
        "Document-createElementNS-customized-builtins.html",
        "HTMLElement-constructor-customized-builtins.html",
        "pseudo-class-defined-customized-builtins.html"
      ]
    },
    {
      "testPath": "custom-elements/upgrading",
      "testFiles": [
        "Document-importNode-customized-builtins.html",
        "Node-cloneNode-customized-builtins.html"
      ]
    },
    {
      "testPath": "custom-elements/registries",
      "testFiles": [
        "define-customized-builtins.html"
      ]
    },
    {
      "testPath": "custom-elements/parser",
      "testFiles": [
        "serializing-html-fragments-customized-builtins.html"
      ]
    },
    {
      "testPath": "custom-elements/htmlconstructor",
      "testFiles": [
        "newtarget-customized-builtins.html"
      ]
    },
    {
      "testPath": "custom-elements/reactions/customized-builtins",
      "testFiles": "**"
    }
  ],
  "contenteditable-plaintextonly": [
    {
      "testPath": "contenteditable",
      "testFiles": [
        "plaintext-only.html"
      ]
    }
  ],
  "compute-pressure": [
    {
      "testPath": "compute-pressure",
      "testFiles": "**"
    }
  ],
  "compression-streams": [
    {
      "testPath": "compression",
      "testFiles": "**"
    }
  ],
  "closewatcher": [
    {
      "testPath": "close-watcher",
      "testFiles": "**"
    },
    {
      "testPath": "html/semantics/popovers",
      "testFiles": [
        "popover-close-request.html"
      ]
    },
    {
      "testPath": "html/semantics/interactive-elements/the-dialog-element",
      "testFiles": [
        "dialog-cancel-events.html",
        "dialog-canceling.html"
      ]
    }
  ],
  "async-clipboard": [
    {
      "testPath": "clipboard-apis",
      "testFiles": [
        "async-*",
        "clipboard-item.https.html"
      ]
    },
    {
      "testPath": "clipboard-apis/text-write-read",
      "testFiles": "**"
    },
    {
      "testPath": "clipboard-apis/permissions",
      "testFiles": "**"
    },
    {
      "testPath": "clipboard-apis/detached-iframe",
      "testFiles": "**"
    }
  ],
  "clear-site-data": [
    {
      "testPath": "clear-site-data",
      "testFiles": "**"
    }
  ],
  "web-bluetooth": [
    {
      "testPath": "bluetooth",
      "testFiles": "**"
    }
  ],
  "badging": [
    {
      "testPath": "badging",
      "testFiles": "**"
    }
  ],
  "background-fetch": [
    {
      "testPath": "background-fetch",
      "testFiles": "**"
    }
  ],
  "avif": [
    {
      "testPath": "avif",
      "testFiles": "**"
    }
  ],
  "js-modules-workers": [
    {
      "testPath": "workers/modules",
      "testFiles": [
        "dedicated-worker-*"
      ]
    }
  ],
  "js-modules-shared-workers": [
    {
      "testPath": "workers/modules",
      "testFiles": [
        "shared-worker-*"
      ]
    }
  ],
  "broadcast-channel": [
    {
      "testPath": "webmessaging/broadcastchannel",
      "testFiles": "**"
    }
  ],
  "fetch-priority": [
    {
      "testPath": "svg/scripted",
      "testFiles": [
        "attr-script-fetchpriority.html"
      ]
    },
    {
      "testPath": "svg/embedded",
      "testFiles": [
        "attr-image-fetchpriority.html"
      ]
    },
    {
      "testPath": "html/semantics/the-link-element",
      "testFiles": [
        "attr-link-fetchpriority.html"
      ]
    },
    {
      "testPath": "html/scripting/the-script-element",
      "testFiles": [
        "attr-script-fetchpriority.html"
      ]
    },
    {
      "testPath": "html/embedded-content/the-img-element",
      "testFiles": [
        "attr-img-fetchpriority.html"
      ]
    },
    {
      "testPath": "fetch/api/request",
      "testFiles": [
        "request-init-priority.any.js"
      ]
    }
  ],
  "transformstream-transformer-cancel": [
    {
      "testPath": "streams/transform-streams",
      "testFiles": [
        "cancel.any.js"
      ]
    }
  ],
  "transferable-streams": [
    {
      "testPath": "streams/transferable",
      "testFiles": "**"
    }
  ],
  "async-iterable-streams": [
    {
      "testPath": "streams/readable-streams",
      "testFiles": [
        "async-iterator.any.js"
      ]
    }
  ],
  "readablestream-from": [
    {
      "testPath": "streams/readable-streams",
      "testFiles": [
        "from.any.js"
      ]
    },
    {
      "testPath": "streams/readable-streams/crashtests",
      "testFiles": [
        "from-cross-realm.https.html"
      ]
    }
  ],
  "readable-byte-streams": [
    {
      "testPath": "streams/readable-byte-streams",
      "testFiles": "**"
    }
  ],
  "storage-buckets": [
    {
      "testPath": "storage/buckets",
      "testFiles": "**"
    }
  ],
  "js-modules-service-workers": [
    {
      "testPath": "service-workers/service-worker",
      "testFiles": [
        "registration-script-module.https.html",
        "update-registration-with-type.https.html"
      ]
    }
  ],
  "declarative-shadow-dom": [
    {
      "testPath": "shadow-dom/declarative",
      "testFiles": "**"
    }
  ],
  "gethtml": [
    {
      "testPath": "shadow-dom/declarative",
      "testFiles": [
        "gethtml*"
      ]
    }
  ],
  "intersection-observer-v2": [
    {
      "testPath": "intersection-observer/v2",
      "testFiles": "**"
    }
  ],
  "user-activation": [
    {
      "testPath": "html/user-activation",
      "testFiles": "**"
    }
  ],
  "aria-attribute-reflection": [
    {
      "testPath": "html/dom",
      "testFiles": [
        "aria-attribute-reflection.html"
      ]
    }
  ],
  "fetch-metadata": [
    {
      "testPath": "fetch/metadata",
      "testFiles": "**"
    }
  ],
  "edit-context": [
    {
      "testPath": "editing/edit-context",
      "testFiles": "**"
    }
  ],
  "observable": [
    {
      "testPath": "dom/observable",
      "testFiles": "**"
    }
  ],
  "aborting": [
    {
      "testPath": "dom/abort",
      "testFiles": "**"
    }
  ],
  "abortsignal-any": [
    {
      "testPath": "dom/abort",
      "testFiles": [
        "abort-signal-any.any.js"
      ]
    }
  ],
  "state": [
    {
      "testPath": "custom-elements/state",
      "testFiles": "**"
    },
    {
      "testPath": "css/selectors/parsing",
      "testFiles": [
        "parse-state.html"
      ]
    },
    {
      "testPath": "css/selectors/invalidation",
      "testFiles": [
        "state-in-has.html"
      ]
    }
  ],
  "form-associated-custom-elements": [
    {
      "testPath": "custom-elements/form-associated",
      "testFiles": "**"
    }
  ],
  "prefers-color-scheme": [
    {
      "testPath": "css/mediaqueries",
      "testFiles": [
        "prefers-color-scheme.html",
        "prefers-color-scheme-*"
      ]
    }
  ],
  "prefers-contrast": [
    {
      "testPath": "css/mediaqueries",
      "testFiles": [
        "prefers-contrast.html"
      ]
    }
  ],
  "prefers-reduced-transparency": [
    {
      "testPath": "css/mediaqueries",
      "testFiles": [
        "prefers-reduced-transparency.html"
      ]
    }
  ],
  "overflow": [
    {
      "testPath": "css/mediaqueries",
      "testFiles": [
        "overflow-media-features.html"
      ]
    }
  ],
  "dynamic-range": [
    {
      "testPath": "css/mediaqueries",
      "testFiles": [
        "dynamic-range.html"
      ]
    }
  ],
  "display-mode": [
    {
      "testPath": "css/mediaqueries",
      "testFiles": [
        "display-mode.html",
        "display-mode.tentative.html"
      ]
    }
  ],
  "update": [
    {
      "testPath": "css/mediaqueries",
      "testFiles": [
        "update-media-feature.html"
      ]
    }
  ],
  "scripting": [
    {
      "testPath": "css/mediaqueries",
      "testFiles": [
        "scripting.html",
        "scripting-*"
      ]
    }
  ],
  "motion-path": [
    {
      "testPath": "css/motion",
      "testFiles": "**"
    }
  ],
  "dir-pseudo": [
    {
      "testPath": "css/selectors",
      "testFiles": [
        "dir-pseudo-*",
        "dir-selector-*",
        "dir-style-*"
      ]
    },
    {
      "testPath": "html/semantics/selectors/pseudo-classes",
      "testFiles": [
        "dir-*",
        "dir.html",
        "dir01.html"
      ]
    }
  ],
  "focus-visible": [
    {
      "testPath": "css/selectors",
      "testFiles": [
        "focus-visible-*"
      ]
    },
    {
      "testPath": "css/selectors/parsing",
      "testFiles": [
        "parse-focus-visible.html"
      ]
    }
  ],
  "has": [
    {
      "testPath": "css/selectors",
      "testFiles": [
        "has-*"
      ]
    },
    {
      "testPath": "css/selectors/parsing",
      "testFiles": [
        "parse-has.html",
        "parse-has-*"
      ]
    },
    {
      "testPath": "css/selectors/invalidation",
      "testFiles": [
        "has-*",
        "*-in-has.*",
        "*-in-has-*"
      ]
    }
  ],
  "read-write-pseudos": [
    {
      "testPath": "css/selectors",
      "testFiles": [
        "selector-read-write-*"
      ]
    },
    {
      "testPath": "html/semantics/selectors/pseudo-classes",
      "testFiles": [
        "readwrite-readonly-type-change.html",
        "readwrite-readonly.html"
      ]
    }
  ],
  "modal": [
    {
      "testPath": "css/selectors",
      "testFiles": [
        "modal-pseudo-class.html"
      ]
    },
    {
      "testPath": "css/selectors/invalidation",
      "testFiles": [
        "modal-pseudo-class-in-has.html"
      ]
    }
  ],
  "nth-child-of": [
    {
      "testPath": "css/selectors",
      "testFiles": [
        "nth-child-of-*"
      ]
    },
    {
      "testPath": "css/selectors/invalidation",
      "testFiles": [
        "nth-child-of-*"
      ]
    }
  ],
  "user-pseudos": [
    {
      "testPath": "css/selectors",
      "testFiles": [
        "user-invalid.html",
        "user-valid.html"
      ]
    },
    {
      "testPath": "css/selectors/invalidation",
      "testFiles": [
        "user-valid-user-invalid.html"
      ]
    }
  ],
  "check-visibility": [
    {
      "testPath": "css/cssom-view",
      "testFiles": [
        "checkVisibility.html"
      ]
    }
  ],
  "scroll-into-view": [
    {
      "testPath": "css/cssom-view",
      "testFiles": [
        "scrollIntoView-*",
        "scrollintoview.html"
      ]
    }
  ],
  "constructed-stylesheets": [
    {
      "testPath": "css/cssom",
      "testFiles": [
        "adoptedstylesheets-observablearray.html",
        "CSSStyleSheet-constructable-*",
        "CSSStyleSheet-constructable.html",
        "CSSStyleSheet-template-adoption.html"
      ]
    }
  ],
  "backdrop-filter": [
    {
      "testPath": "css/filter-effects",
      "testFiles": [
        "backdrop-filter-*",
        "backdrop-filters-*",
        "css-backdrop-filters-*",
        "repaint-added-backdrop-filter.html"
      ]
    },
    {
      "testPath": "css/filter-effects/parsing",
      "testFiles": [
        "backdrop-filter-*"
      ]
    },
    {
      "testPath": "css/filter-effects/animation",
      "testFiles": [
        "backdrop-filter-*"
      ]
    }
  ],
  "custom-properties": [
    {
      "testPath": "css/css-variables",
      "testFiles": "**"
    }
  ],
  "view-transitions": [
    {
      "testPath": "css/css-view-transitions",
      "testFiles": "**"
    }
  ],
  "view-transition-class": [
    {
      "testPath": "css/css-view-transitions",
      "testFiles": [
        "class-specificity.html",
        "pseudo-with-classes-*"
      ]
    },
    {
      "testPath": "css/css-view-transitions/parsing",
      "testFiles": [
        "view-transition-class-*"
      ]
    }
  ],
  "active-view-transition": [
    {
      "testPath": "css/css-view-transitions",
      "testFiles": [
        "active-view-transition-*"
      ]
    }
  ],
  "abs-sign": [
    {
      "testPath": "css/css-values",
      "testFiles": [
        "signs-abs-*"
      ]
    },
    {
      "testPath": "css/css-transforms",
      "testFiles": [
        "transform-with-sign-function.html"
      ]
    }
  ],
  "cap": [
    {
      "testPath": "css/css-values",
      "testFiles": [
        "cap-*"
      ]
    }
  ],
  "rcap": [
    {
      "testPath": "css/css-values",
      "testFiles": [
        "rcap-*"
      ]
    }
  ],
  "exp-functions": [
    {
      "testPath": "css/css-values",
      "testFiles": [
        "exp-log-*",
        "hypot-pow-sqrt-*"
      ]
    }
  ],
  "ic": [
    {
      "testPath": "css/css-values",
      "testFiles": [
        "ic-*"
      ]
    }
  ],
  "ric": [
    {
      "testPath": "css/css-values",
      "testFiles": [
        "ric-*"
      ]
    }
  ],
  "lh": [
    {
      "testPath": "css/css-values",
      "testFiles": [
        "lh-*"
      ]
    }
  ],
  "rlh": [
    {
      "testPath": "css/css-values",
      "testFiles": [
        "rlh-*"
      ]
    }
  ],
  "ch": [
    {
      "testPath": "css/css-values",
      "testFiles": [
        "ch-*"
      ]
    }
  ],
  "rch": [
    {
      "testPath": "css/css-values",
      "testFiles": [
        "rch-*"
      ]
    }
  ],
  "rex": [
    {
      "testPath": "css/css-values",
      "testFiles": [
        "rex-*"
      ]
    }
  ],
  "round-mod-rem": [
    {
      "testPath": "css/css-values",
      "testFiles": [
        "round-function.html",
        "round-mod-rem-*"
      ]
    }
  ],
  "trig-functions": [
    {
      "testPath": "css/css-values",
      "testFiles": [
        "acos-asin-atan-atan2-*",
        "sin-cos-tan-*"
      ]
    }
  ],
  "calc-constants": [
    {
      "testPath": "css/css-values",
      "testFiles": [
        "calc-infinity-*"
      ]
    }
  ],
  "viewport-unit-variants": [
    {
      "testPath": "css/css-values",
      "testFiles": [
        "viewport-units-compute.html",
        "viewport-units-invalidation.html",
        "viewport-units-keyframes.html",
        "viewport-units-media-queries.html",
        "viewport-units-parsing.html",
        "viewport-units-writing-mode-font-size.html",
        "viewport-units-writing-mode.html"
      ]
    }
  ],
  "css-typed-om": [
    {
      "testPath": "css/css-typed-om",
      "testFiles": "**"
    }
  ],
  "numeric-factory-functions": [
    {
      "testPath": "css/css-typed-om",
      "testFiles": [
        "factory-*"
      ]
    }
  ],
  "starting-style": [
    {
      "testPath": "css/css-transitions",
      "testFiles": [
        "starting-style-*"
      ]
    },
    {
      "testPath": "css/css-transitions/parsing",
      "testFiles": [
        "starting-style-*"
      ]
    }
  ],
  "transition-behavior": [
    {
      "testPath": "css/css-transitions",
      "testFiles": [
        "transition-behavior.html"
      ]
    },
    {
      "testPath": "css/css-transitions/parsing",
      "testFiles": [
        "transition-behavior.html"
      ]
    }
  ],
  "accent-color": [
    {
      "testPath": "css/css-ui",
      "testFiles": [
        "accent-color-*"
      ]
    },
    {
      "testPath": "css/css-ui/animation",
      "testFiles": [
        "accent-color-*"
      ]
    }
  ],
  "appearance": [
    {
      "testPath": "css/css-ui",
      "testFiles": [
        "appearance-*"
      ]
    }
  ],
  "outline": [
    {
      "testPath": "css/css-ui",
      "testFiles": [
        "outline-*"
      ]
    }
  ],
  "user-select": [
    {
      "testPath": "css/css-ui",
      "testFiles": [
        "user-select-*"
      ]
    },
    {
      "testPath": "css/css-ui/parsing",
      "testFiles": [
        "user-select-*"
      ]
    }
  ],
  "nesting": [
    {
      "testPath": "css/css-syntax",
      "testFiles": [
        "custom-property-rule-ambiguity.html",
        "trailing-braces.html",
        "var-with-blocks.html"
      ]
    },
    {
      "testPath": "css/css-nesting",
      "testFiles": "**"
    }
  ],
  "text-emphasis": [
    {
      "testPath": "css/css-text-decor",
      "testFiles": [
        "text-emphasis-*"
      ]
    },
    {
      "testPath": "css/css-text-decor/parsing",
      "testFiles": [
        "*"
      ]
    }
  ],
  "text-underline-offset": [
    {
      "testPath": "css/css-text-decor",
      "testFiles": [
        "text-underline-offset-*"
      ]
    },
    {
      "testPath": "css/css-text-decor/animations",
      "testFiles": [
        "text-underline-offset-*"
      ]
    }
  ],
  "individual-transforms": [
    {
      "testPath": "css/css-transforms",
      "testFiles": [
        "transform-and-individual-transform-properties-computed-style.html"
      ]
    },
    {
      "testPath": "css/css-transforms/parsing",
      "testFiles": [
        "rotate-parsing-computed.html",
        "rotate-parsing-valid.html"
      ]
    },
    {
      "testPath": "css/css-transforms/individual-transform",
      "testFiles": "**"
    },
    {
      "testPath": "css/css-transforms/animation",
      "testFiles": [
        "rotate-animation-on-svg.html",
        "rotate-animation-with-will-change-transform-001.html",
        "scale-and-rotate-both-specified-on-animation-keyframes.html",
        "scale-animation-on-svg.html",
        "translate-animation-on-svg.html"
      ]
    }
  ],
  "transforms3d": [
    {
      "testPath": "css/css-transforms",
      "testFiles": [
        "*3d*",
        "backface-visibility-*",
        "perspective-*"
      ]
    },
    {
      "testPath": "css/css-transforms/parsing",
      "testFiles": [
        "backface-visibility-*",
        "perspective-*"
      ]
    },
    {
      "testPath": "css/css-transforms/animation",
      "testFiles": [
        "backface-visibility-*",
        "perspective-*"
      ]
    }
  ],
  "scroll-snap": [
    {
      "testPath": "css/css-scroll-snap",
      "testFiles": "**"
    }
  ],
  "scrollbar-color": [
    {
      "testPath": "css/css-scrollbars",
      "testFiles": [
        "input-scrollbar-color.html",
        "scrollbar-color-*",
        "scrollbar-width-paint-003.html",
        "transparent-on-root.html",
        "viewport-scrollbar-body.html",
        "viewport-scrollbar.html"
      ]
    }
  ],
  "scrollbar-width": [
    {
      "testPath": "css/css-scrollbars",
      "testFiles": [
        "scrollbar-width-*",
        "textarea-scrollbar-width-none.html"
      ]
    }
  ],
  "has-slotted": [
    {
      "testPath": "css/css-scoping",
      "testFiles": [
        "has-slotted-*"
      ]
    },
    {
      "testPath": "css/selectors/parsing",
      "testFiles": [
        "parse-has-slotted.tentative.html"
      ]
    }
  ],
  "registered-custom-properties": [
    {
      "testPath": "css/css-properties-values-api",
      "testFiles": "**"
    }
  ],
  "ruby-align": [
    {
      "testPath": "css/css-ruby",
      "testFiles": [
        "ruby-align-*"
      ]
    },
    {
      "testPath": "css/css-ruby/parsing",
      "testFiles": [
        "ruby-align-*"
      ]
    }
  ],
  "ruby-position": [
    {
      "testPath": "css/css-ruby",
      "testFiles": [
        "ruby-position*"
      ]
    },
    {
      "testPath": "css/css-ruby/parsing",
      "testFiles": [
        "ruby-position-*"
      ]
    }
  ],
  "target-text": [
    {
      "testPath": "css/css-pseudo",
      "testFiles": [
        "target-text-*"
      ]
    }
  ],
  "spelling-grammar-error": [
    {
      "testPath": "css/css-pseudo",
      "testFiles": [
        "spelling-error-*",
        "grammar-spelling-errors-*"
      ]
    }
  ],
  "marker": [
    {
      "testPath": "css/css-pseudo",
      "testFiles": [
        "marker-*",
        "first-letter-exclude-block-child-marker.html",
        "first-letter-exclude-inline-child-marker.html",
        "first-letter-exclude-inline-marker.html",
        "first-letter-skip-marker.html",
        "first-line-and-marker.html",
        "outside-marker-paint-order.html"
      ]
    },
    {
      "testPath": "css/css-pseudo/parsing",
      "testFiles": [
        "marker-*"
      ]
    }
  ],
  "file-selector-button": [
    {
      "testPath": "css/css-pseudo",
      "testFiles": [
        "file-selector-button-*"
      ]
    }
  ],
  "first-letter": [
    {
      "testPath": "css/css-pseudo",
      "testFiles": [
        "first-letter-*"
      ]
    }
  ],
  "first-line": [
    {
      "testPath": "css/css-pseudo",
      "testFiles": [
        "first-line-*"
      ]
    }
  ],
  "masonry": [
    {
      "testPath": "css/css-masonry",
      "testFiles": "**"
    },
    {
      "testPath": "css/css-grid/masonry",
      "testFiles": "**"
    }
  ],
  "page-orientation": [
    {
      "testPath": "css/css-page",
      "testFiles": [
        "page-orientation*"
      ]
    },
    {
      "testPath": "css/css-page/parsing",
      "testFiles": [
        "page-orientation-*"
      ]
    }
  ],
  "page-selectors": [
    {
      "testPath": "css/css-page",
      "testFiles": [
        "page-left-right-*",
        "pseudo-first-*"
      ]
    }
  ],
  "masks": [
    {
      "testPath": "css/css-masking",
      "testFiles": [
        "mask-shorthand-subproperties-reset.html"
      ]
    },
    {
      "testPath": "css/css-masking/parsing",
      "testFiles": [
        "mask-composite-*",
        "mask-computed.html",
        "mask-invalid.html",
        "mask-position-*",
        "mask-repeat-*"
      ]
    },
    {
      "testPath": "css/css-masking/mask-image",
      "testFiles": "**"
    },
    {
      "testPath": "css/css-masking/animations",
      "testFiles": [
        "mask-image-interpolation.html",
        "mask-no-interpolation.html",
        "mask-position-interpolation.html"
      ]
    }
  ],
  "logical-properties": [
    {
      "testPath": "css/css-logical",
      "testFiles": "**"
    }
  ],
  "counter-set": [
    {
      "testPath": "css/css-lists",
      "testFiles": [
        "counter-set-*"
      ]
    }
  ],
  "highlight": [
    {
      "testPath": "css/css-highlight-api",
      "testFiles": "**"
    }
  ],
  "scrollbar-gutter": [
    {
      "testPath": "css/css-overflow",
      "testFiles": [
        "scrollbar-gutter-*"
      ]
    },
    {
      "testPath": "css/css-overflow/parsing",
      "testFiles": [
        "scrollbar-gutter-*"
      ]
    }
  ],
  "overflow-shorthand": [
    {
      "testPath": "css/css-overflow",
      "testFiles": [
        "overflow-*",
        "!overflow-auto-scrollbar-gutter-intrinsic-*",
        "!overflow-scroll-*",
        "!overflow-no-interpolation.html"
      ]
    }
  ],
  "grid": [
    {
      "testPath": "css/css-grid",
      "testFiles": "**"
    }
  ],
  "font-metric-overrides": [
    {
      "testPath": "css/css-font-loading",
      "testFiles": [
        "fontface-override-descriptor-getter-setter.sub.html"
      ]
    },
    {
      "testPath": "css/css-fonts",
      "testFiles": [
        "ascent-descent-override.html",
        "line-gap-override.html",
        "metrics-override-normal-keyword.html"
      ]
    }
  ],
  "conic-gradients": [
    {
      "testPath": "css/css-images",
      "testFiles": [
        "*conic*"
      ]
    }
  ],
  "object-view-box": [
    {
      "testPath": "css/css-images",
      "testFiles": [
        "object-view-box-*"
      ]
    },
    {
      "testPath": "css/css-images/animation",
      "testFiles": [
        "object-view-box-*"
      ]
    }
  ],
  "linear-easing": [
    {
      "testPath": "css/css-easing",
      "testFiles": [
        "linear-timing-*"
      ]
    }
  ],
  "quotes": [
    {
      "testPath": "css/css-content",
      "testFiles": [
        "quotes-*"
      ]
    }
  ],
  "contain-inline-size": [
    {
      "testPath": "css/css-contain",
      "testFiles": [
        "contain-inline-size-*"
      ]
    }
  ],
  "cascade-layers": [
    {
      "testPath": "css/css-cascade",
      "testFiles": [
        "layer-*"
      ]
    },
    {
      "testPath": "css/css-cascade/parsing",
      "testFiles": [
        "layer.html"
      ]
    }
  ],
  "scope": [
    {
      "testPath": "css/css-cascade",
      "testFiles": [
        "at-scope-*",
        "scope-*"
      ]
    }
  ],
  "revert-value": [
    {
      "testPath": "css/css-cascade",
      "testFiles": [
        "revert-val-*"
      ]
    }
  ],
  "color-function": [
    {
      "testPath": "css/css-color",
      "testFiles": [
        "a98rgb-*",
        "display-p3-*",
        "predefined-*",
        "prophoto-rgb-*",
        "rec2020-*",
        "srgb-*",
        "xyz-*"
      ]
    }
  ],
  "color-mix": [
    {
      "testPath": "css/css-color",
      "testFiles": [
        "color-mix-*",
        "nested-color-mix-with-currentcolor.html"
      ]
    },
    {
      "testPath": "css/css-color/parsing",
      "testFiles": [
        "*-color-mix-*",
        "color-mix-out-of-gamut.html"
      ]
    }
  ],
  "lab": [
    {
      "testPath": "css/css-color",
      "testFiles": [
        "lab-*",
        "lch-*"
      ]
    }
  ],
  "light-dark": [
    {
      "testPath": "css/css-color",
      "testFiles": [
        "light-dark-*"
      ]
    }
  ],
  "oklab": [
    {
      "testPath": "css/css-color",
      "testFiles": [
        "oklab-*",
        "oklch-*"
      ]
    }
  ],
  "hwb": [
    {
      "testPath": "css/css-color",
      "testFiles": [
        "hwb-*"
      ]
    }
  ],
  "relative-color": [
    {
      "testPath": "css/css-color",
      "testFiles": [
        "relative-*"
      ]
    },
    {
      "testPath": "css/css-color/parsing",
      "testFiles": [
        "relative-*",
        "*-relative-*"
      ]
    }
  ],
  "box-decoration-break": [
    {
      "testPath": "css/css-break",
      "testFiles": [
        "box-decoration-break-*"
      ]
    },
    {
      "testPath": "css/css-break/parsing",
      "testFiles": [
        "box-decoration-break-*"
      ]
    }
  ],
  "page-break-aliases": [
    {
      "testPath": "css/css-break",
      "testFiles": [
        "page-break-legacy-shorthands.html"
      ]
    }
  ],
  "flexbox": [
    {
      "testPath": "css/css-flexbox",
      "testFiles": "**"
    }
  ],
  "animation-composition": [
    {
      "testPath": "css/css-animations",
      "testFiles": [
        "animation-composition.html",
        "animation-composition-*"
      ]
    },
    {
      "testPath": "css/css-animations/parsing",
      "testFiles": [
        "animation-composition-*"
      ]
    }
  ],
  "display-animation": [
    {
      "testPath": "css/css-animations",
      "testFiles": [
        "display-interpolation.html"
      ]
    }
  ],
  "anchor-positioning": [
    {
      "testPath": "css/css-anchor-position",
      "testFiles": "**"
    }
  ],
  "font-palette": [
    {
      "testPath": "css/css-fonts",
      "testFiles": [
        "font-palette.html",
        "font-palette-*",
        "palette-values-rule-*"
      ]
    },
    {
      "testPath": "css/css-fonts/parsing",
      "testFiles": [
        "font-palette-*",
        "font-palette-values-*"
      ]
    }
  ],
  "font-size-adjust": [
    {
      "testPath": "css/css-fonts",
      "testFiles": [
        "font-size-adjust-*",
        "size-adjust-02.html",
        "size-adjust-03.html"
      ]
    },
    {
      "testPath": "css/css-fonts/parsing",
      "testFiles": [
        "font-size-adjust-*"
      ]
    },
    {
      "testPath": "css/css-fonts/animations",
      "testFiles": [
        "font-size-adjust-*"
      ]
    }
  ],
  "font-synthesis": [
    {
      "testPath": "css/css-fonts",
      "testFiles": [
        "font-synthesis-0*.html"
      ]
    },
    {
      "testPath": "css/css-fonts/parsing",
      "testFiles": [
        "font-synthesis-computed.html",
        "font-synthesis-invalid.html",
        "font-synthesis-valid.html"
      ]
    }
  ],
  "font-synthesis-position": [
    {
      "testPath": "css/css-fonts",
      "testFiles": [
        "font-synthesis-position*"
      ]
    },
    {
      "testPath": "css/css-fonts/parsing",
      "testFiles": [
        "font-synthesis-position*"
      ]
    }
  ],
  "font-synthesis-small-caps": [
    {
      "testPath": "css/css-fonts",
      "testFiles": [
        "font-synthesis-small-caps*"
      ]
    },
    {
      "testPath": "css/css-fonts/parsing",
      "testFiles": [
        "font-synthesis-small-caps*"
      ]
    }
  ],
  "font-synthesis-style": [
    {
      "testPath": "css/css-fonts",
      "testFiles": [
        "font-synthesis-style*"
      ]
    },
    {
      "testPath": "css/css-fonts/parsing",
      "testFiles": [
        "font-synthesis-style*"
      ]
    }
  ],
  "font-synthesis-weight": [
    {
      "testPath": "css/css-fonts",
      "testFiles": [
        "font-synthesis-weight*"
      ]
    },
    {
      "testPath": "css/css-fonts/parsing",
      "testFiles": [
        "font-synthesis-weight*"
      ]
    }
  ],
  "font-variant-alternates": [
    {
      "testPath": "css/css-fonts",
      "testFiles": [
        "alternates-order.html",
        "font-variant-alternates-*"
      ]
    },
    {
      "testPath": "css/css-fonts/parsing",
      "testFiles": [
        "font-variant-alternates-*"
      ]
    }
  ],
  "font-variant-emoji": [
    {
      "testPath": "css/css-fonts",
      "testFiles": [
        "font-variant-emoji-*"
      ]
    },
    {
      "testPath": "css/css-fonts/parsing",
      "testFiles": [
        "font-variant-emoji-*"
      ]
    }
  ],
  "font-variant-position": [
    {
      "testPath": "css/css-fonts",
      "testFiles": [
        "font-variant-position-*"
      ]
    },
    {
      "testPath": "css/css-fonts/parsing",
      "testFiles": [
        "font-variant-position-*"
      ]
    }
  ],
  "background-clip": [
    {
      "testPath": "css/css-backgrounds",
      "testFiles": [
        "background-clip*",
        "css3-background-clip*"
      ]
    },
    {
      "testPath": "css/css-backgrounds/parsing",
      "testFiles": [
        "background-clip-*"
      ]
    },
    {
      "testPath": "css/css-backgrounds/background-clip",
      "testFiles": [
        "clip-border-box*",
        "clip-content-box*",
        "clip-padding-box*",
        "clip-rounded-corner.html"
      ]
    }
  ],
  "border-image": [
    {
      "testPath": "css/css-backgrounds",
      "testFiles": [
        "border-image*",
        "css3-border-image*"
      ]
    },
    {
      "testPath": "css/css-backgrounds/parsing",
      "testFiles": [
        "border-image-*"
      ]
    },
    {
      "testPath": "css/css-backgrounds/animations",
      "testFiles": [
        "border-image-*"
      ]
    }
  ],
  "webvtt": [
    {
      "testPath": "webvtt/parsing/file-parsing",
      "testFiles": [
        "signature-invalid.html"
      ]
    },
    {
      "testPath": "webvtt/api/VTTCue",
      "testFiles": [
        "align.html",
        "constructor-exceptions.html",
        "getCueAsHTML.html",
        "line.html",
        "position.html",
        "size.html",
        "snapToLines.html",
        "text.html",
        "vertical.html"
      ]
    },
    {
      "testPath": "webvtt/parsing/file-parsing/tests",
      "testFiles": [
        "arrows.html",
        "comment-in-cue-text.html",
        "header-garbage.html",
        "header-space.html",
        "header-tab.html",
        "header-timings.html",
        "ids.html",
        "newlines.html",
        "nulls.html",
        "settings-align.html",
        "settings-multiple.html",
        "settings-size.html",
        "settings-vertical.html",
        "signature-bom.html",
        "signature-no-newline.html",
        "signature-space-no-newline.html",
        "signature-space.html",
        "signature-tab-no-newline.html",
        "signature-tab.html",
        "signature-timings.html",
        "stylesheets.html",
        "timings-60.html",
        "timings-eof.html",
        "timings-garbage.html",
        "timings-negative.html",
        "timings-omitted-hours.html",
        "timings-too-long.html",
        "timings-too-short.html",
        "whitespace-chars.html"
      ]
    },
    {
      "testPath": "webvtt/parsing/cue-text-parsing/tests",
      "testFiles": "**"
    },
    {
      "testPath": "webvtt/rendering/cues-with-video/processing-model",
      "testFiles": "**"
    }
  ],
  "webvtt-regions": [
    {
      "testPath": "webvtt/api/VTTRegion",
      "testFiles": "**"
    },
    {
      "testPath": "webvtt/api/VTTCue",
      "testFiles": [
        "region.html"
      ]
    },
    {
      "testPath": "webvtt/parsing/file-parsing/tests",
      "testFiles": [
        "header-regions.html",
        "regions-edge-case.html",
        "regions-id.html",
        "regions-lines.html",
        "regions-old.html",
        "regions-regionanchor.html",
        "regions-scroll.html",
        "regions-viewportanchor.html",
        "settings-region.html"
      ]
    },
    {
      "testPath": "webvtt/rendering/cues-with-video/processing-model/regions",
      "testFiles": "**"
    },
    {
      "testPath": "webvtt/rendering/cues-with-video/processing-model/selectors/cue-region",
      "testFiles": "**"
    },
    {
      "testPath": "webvtt/rendering/cues-with-video/processing-model/selectors/cue-region_function",
      "testFiles": "**"
    }
  ],
  "webvtt-cue-alignment": [
    {
      "testPath": "webvtt/api/VTTCue",
      "testFiles": [
        "lineAlign.html",
        "positionAlign.html"
      ]
    },
    {
      "testPath": "webvtt/parsing/file-parsing/tests",
      "testFiles": [
        "settings-line.html",
        "settings-position.html"
      ]
    }
  ],
  "webdriver-bidi": [
    {
      "testPath": "webdriver/tests/bidi",
      "testFiles": "**"
    }
  ],
  "web-audio": [
    {
      "testPath": "webaudio/the-audio-api/the-waveshapernode-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-stereopanner-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-scriptprocessornode-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-periodicwave-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-pannernode-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-oscillatornode-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-mediastreamaudiosourcenode-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-mediastreamaudiodestinationnode-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-mediaelementaudiosourcenode-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-iirfilternode-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-gainnode-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-dynamicscompressornode-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-destinationnode-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-delaynode-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-constantsourcenode-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-convolvernode-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-channelsplitternode-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-channelmergernode-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-biquadfilternode-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-audionode-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-audiocontext-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-audioparam-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-audiobuffersourcenode-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-audiobuffer-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/the-analysernode-interface",
      "testFiles": "**"
    },
    {
      "testPath": "webaudio/the-audio-api/processing-model",
      "testFiles": "**"
    }
  ],
  "offline-audio-context": [
    {
      "testPath": "webaudio/the-audio-api/the-offlineaudiocontext-interface",
      "testFiles": "**"
    }
  ],
  "audio-worklet": [
    {
      "testPath": "webaudio/the-audio-api/the-audioworklet-interface",
      "testFiles": "**"
    }
  ],
  "context-fill-stroke": [
    {
      "testPath": "svg/painting/reftests",
      "testFiles": [
        "paint-context-*"
      ]
    }
  ],
  "structured-clone": [
    {
      "testPath": "html/webappapis/structured-clone",
      "testFiles": "**"
    }
  ],
  "popover": [
    {
      "testPath": "html/semantics/popovers",
      "testFiles": "**"
    }
  ],
  "field-sizing": [
    {
      "testPath": "html/rendering/widgets",
      "testFiles": [
        "field-sizing-*"
      ]
    },
    {
      "testPath": "css/css-ui/parsing",
      "testFiles": [
        "field-sizing-*"
      ]
    }
  ],
  "details": [
    {
      "testPath": "html/rendering/the-details-element",
      "testFiles": "**"
    }
  ],
  "details-content": [
    {
      "testPath": "html/rendering/the-details-element",
      "testFiles": [
        "details-pseudo-elements-001.html",
        "details-pseudo-elements-002.html",
        "details-pseudo-elements-003.html",
        "details-pseudo-elements-004.html",
        "details-pseudo-elements-005.html",
        "details-pseudo-elements-006.html"
      ]
    }
  ],
  "tabindex": [
    {
      "testPath": "html/interaction/focus",
      "testFiles": [
        "tabindex-focus-flag.html"
      ]
    },
    {
      "testPath": "html/interaction/focus/sequential-focus-navigation-and-the-tabindex-attribute",
      "testFiles": "**"
    }
  ],
  "blocking-render": [
    {
      "testPath": "html/dom/render-blocking",
      "testFiles": "**"
    }
  ],
  "offscreen-canvas": [
    {
      "testPath": "html/canvas/offscreen",
      "testFiles": "**"
    }
  ],
  "zstd": [
    {
      "testPath": "fetch/content-encoding/zstd",
      "testFiles": "**"
    }
  ],
  "fetch-request-streams": [
    {
      "testPath": "fetch/api/basic",
      "testFiles": [
        "request-upload*"
      ]
    }
  ],
  "scrollend": [
    {
      "testPath": "dom/events/scrolling",
      "testFiles": [
        "scrollend-*"
      ]
    }
  ],
  "move-before": [
    {
      "testPath": "dom/nodes/moveBefore",
      "testFiles": "**"
    }
  ],
  "media-pseudos": [
    {
      "testPath": "css/selectors/media",
      "testFiles": "**"
    }
  ],
  "zoom": [
    {
      "testPath": "css/css-viewport/zoom",
      "testFiles": "**"
    }
  ],
  "cross-document-view-transitions": [
    {
      "testPath": "css/css-view-transitions/navigation",
      "testFiles": "**"
    }
  ],
  "interpolate-size": [
    {
      "testPath": "css/css-values/calc-size",
      "testFiles": [
        "interpolate-size-*"
      ]
    },
    {
      "testPath": "css/css-values/calc-size/animation",
      "testFiles": [
        "interpolate-size-*"
      ]
    }
  ],
  "calc-size": [
    {
      "testPath": "css/css-values/calc-size",
      "testFiles": [
        "calc-size-*"
      ]
    },
    {
      "testPath": "css/css-values/calc-size/animation",
      "testFiles": [
        "calc-size-*"
      ]
    }
  ],
  "text-wrap-balance": [
    {
      "testPath": "css/css-text/white-space",
      "testFiles": [
        "text-wrap-balance-*"
      ]
    }
  ],
  "text-wrap-nowrap": [
    {
      "testPath": "css/css-text/white-space",
      "testFiles": [
        "text-wrap-nowrap-*"
      ]
    }
  ],
  "white-space-collapse": [
    {
      "testPath": "css/css-text/white-space",
      "testFiles": [
        "white-space-collapse-*",
        "line-edge-white-space-collapse-*"
      ]
    },
    {
      "testPath": "css/css-text/parsing",
      "testFiles": [
        "white-space-collapse-*"
      ]
    }
  ],
  "text-spacing-trim": [
    {
      "testPath": "css/css-text/text-spacing-trim",
      "testFiles": "**"
    },
    {
      "testPath": "css/css-text/parsing",
      "testFiles": [
        "text-spacing-trim-*"
      ]
    }
  ],
  "text-indent": [
    {
      "testPath": "css/css-text/text-indent",
      "testFiles": "**"
    }
  ],
  "text-wrap-pretty": [
    {
      "testPath": "css/css-text/parsing",
      "testFiles": [
        "text-wrap-pretty.html"
      ]
    }
  ],
  "text-wrap-style": [
    {
      "testPath": "css/css-text/parsing",
      "testFiles": [
        "text-wrap-style-*"
      ]
    }
  ],
  "text-wrap": [
    {
      "testPath": "css/css-text/parsing",
      "testFiles": [
        "text-wrap-computed.html",
        "text-wrap-invalid.html",
        "text-wrap-valid.html"
      ]
    }
  ],
  "text-wrap-mode": [
    {
      "testPath": "css/css-text/parsing",
      "testFiles": [
        "text-wrap-mode-*"
      ]
    }
  ],
  "hyphens": [
    {
      "testPath": "css/css-text/hyphens",
      "testFiles": [
        "hyphens-*"
      ]
    }
  ],
  "hyphenate-character": [
    {
      "testPath": "css/css-text/hyphens",
      "testFiles": [
        "hyphenate-character-*"
      ]
    }
  ],
  "hyphenate-limit-chars": [
    {
      "testPath": "css/css-text/hyphens",
      "testFiles": [
        "hyphenate-limit-chars-*"
      ]
    }
  ],
  "transform-box": [
    {
      "testPath": "css/css-transforms/transform-box",
      "testFiles": [
        "*"
      ]
    }
  ],
  "vertical-form-controls": [
    {
      "testPath": "css/css-writing-modes/forms",
      "testFiles": [
        "*vertical*",
        "*vlr*",
        "*vrl*"
      ]
    }
  ],
  "scroll-snap-events": [
    {
      "testPath": "css/css-scroll-snap/snap-events",
      "testFiles": [
        "snap-events-with-pseudo-target.tentative.html",
        "snapevents-at-document-bubble-to-window.html"
      ]
    },
    {
      "testPath": "css/css-scroll-snap/snap-events/scrollsnapchanging",
      "testFiles": "**"
    },
    {
      "testPath": "css/css-scroll-snap/snap-events/scrollsnapchange",
      "testFiles": "**"
    }
  ],
  "scroll-initial-target": [
    {
      "testPath": "css/css-scroll-snap/scroll-initial-target",
      "testFiles": "**"
    }
  ],
  "contain-intrinsic-size": [
    {
      "testPath": "css/css-sizing/contain-intrinsic-size",
      "testFiles": "**"
    }
  ],
  "aspect-ratio": [
    {
      "testPath": "css/css-sizing/aspect-ratio",
      "testFiles": "**"
    }
  ],
  "sticky-positioning": [
    {
      "testPath": "css/css-position/sticky",
      "testFiles": "**"
    }
  ],
  "overlay": [
    {
      "testPath": "css/css-position/overlay",
      "testFiles": "**"
    }
  ],
  "clip-path-boxes": [
    {
      "testPath": "css/css-masking/hit-test",
      "testFiles": [
        "clip-path-svg-geometry-box.html"
      ]
    },
    {
      "testPath": "css/css-masking/clip-path-svg-content",
      "testFiles": [
        "clip-path-inset-stroke-001.svg",
        "clip-path-inset-stroke-002.svg",
        "clip-path-shape-circle-003.svg",
        "clip-path-shape-circle-004.svg",
        "clip-path-shape-circle-005.svg"
      ]
    },
    {
      "testPath": "css/css-masking/clip-path",
      "testFiles": [
        "clip-path-fillBox-1a.html",
        "clip-path-fillBox-1b.html",
        "clip-path-strokeBox-1a.html",
        "clip-path-strokeBox-1b.html",
        "clip-path-strokeBox-1c.html",
        "clip-path-viewBox-1a.html",
        "clip-path-viewBox-1b.html",
        "clip-path-viewBox-1c.html",
        "clip-path-viewBox-1d.html"
      ]
    }
  ],
  "clip-path": [
    {
      "testPath": "css/css-masking/clip-path",
      "testFiles": "**"
    }
  ],
  "alignment-baseline": [
    {
      "testPath": "css/css-inline/parsing",
      "testFiles": [
        "alignment-baseline-*"
      ]
    },
    {
      "testPath": "css/css-inline/animation",
      "testFiles": [
        "alignment-baseline-*"
      ]
    }
  ],
  "baseline-shift": [
    {
      "testPath": "css/css-inline/parsing",
      "testFiles": [
        "baseline-shift-*"
      ]
    }
  ],
  "text-box": [
    {
      "testPath": "css/css-inline/text-box-trim",
      "testFiles": "**"
    }
  ],
  "baseline-source": [
    {
      "testPath": "css/css-inline/baseline-source",
      "testFiles": "**"
    }
  ],
  "initial-letter": [
    {
      "testPath": "css/css-inline/initial-letter",
      "testFiles": "**"
    }
  ],
  "subgrid": [
    {
      "testPath": "css/css-grid/subgrid",
      "testFiles": "**"
    }
  ],
  "grid-animation": [
    {
      "testPath": "css/css-grid/animation",
      "testFiles": "**"
    }
  ],
  "image-orientation": [
    {
      "testPath": "css/css-images/parsing",
      "testFiles": [
        "image-orientation-*"
      ]
    },
    {
      "testPath": "css/css-images/image-orientation",
      "testFiles": [
        "*"
      ]
    }
  ],
  "gradient-interpolation": [
    {
      "testPath": "css/css-images/parsing",
      "testFiles": [
        "gradient-interpolation-*"
      ]
    }
  ],
  "image-set": [
    {
      "testPath": "css/css-images/image-set",
      "testFiles": "**"
    }
  ],
  "counter-style": [
    {
      "testPath": "css/css-counter-styles/cssom",
      "testFiles": [
        "cssom-additive-symbols-setter-invalid.html",
        "cssom-additive-symbols-setter.html",
        "cssom-fallback-setter-invalid.html",
        "cssom-fallback-setter.html",
        "cssom-name-setter-invalid.html",
        "cssom-name-setter.html",
        "cssom-negative-setter-invalid.html",
        "cssom-negative-setter.html",
        "cssom-pad-setter-invalid.html",
        "cssom-pad-setter.html",
        "cssom-prefix-suffix-setter-invalid.html",
        "cssom-prefix-suffix-setter.html",
        "cssom-range-setter-invalid.html",
        "cssom-range-setter.html",
        "cssom-symbols-setter-invalid.html",
        "cssom-symbols-setter.html",
        "cssom-system-setter-1.html",
        "cssom-system-setter-2.html",
        "cssom-system-setter-invalid.html"
      ]
    },
    {
      "testPath": "css/css-counter-styles/counter-style-at-rule",
      "testFiles": "**"
    }
  ],
  "two-value-display": [
    {
      "testPath": "css/css-display/parsing",
      "testFiles": "**"
    }
  ],
  "container-queries": [
    {
      "testPath": "css/css-conditional/container-queries",
      "testFiles": [
        "animation-container-size.html",
        "animation-container-type-dynamic.html",
        "animation-nested-animation.html",
        "animation-nested-transition.html",
        "aspect-ratio-feature-evaluation.html",
        "at-container-parsing.html",
        "at-container-serialization.html",
        "auto-scrollbars.html",
        "backdrop-invalidation.html",
        "calc-evaluation.html",
        "canvas-as-container-001.html",
        "canvas-as-container-002.html",
        "canvas-as-container-003.html",
        "canvas-as-container-004.html",
        "canvas-as-container-005.html",
        "canvas-as-container-006.html",
        "change-display-in-container.html",
        "chrome-legacy-skip-recalc.html",
        "column-spanner-in-container.html",
        "conditional-container-status.html",
        "container-computed.html",
        "container-for-cue.html",
        "container-for-shadow-dom.html",
        "container-inheritance.html",
        "container-inner-at-rules.html",
        "container-inside-multicol-with-table.html",
        "container-longhand-animation-type.html",
        "container-name-computed.html",
        "container-name-invalidation.html",
        "container-name-parsing.html",
        "container-name-tree-scoped.html",
        "container-nested.html",
        "container-parsing.html",
        "container-selection.html",
        "container-size-*",
        "container-type-computed.html",
        "container-type-containment.html",
        "container-type-invalidation.html",
        "container-type-layout-invalidation.html",
        "container-type-parsing.html",
        "container-units-*",
        "counters-flex-circular.html",
        "counters-in-container-dynamic.html",
        "counters-in-container.html",
        "custom-layout-container-001.https.html",
        "deep-nested-inline-size-containers.html",
        "dialog-backdrop-create.html",
        "dialog-backdrop-remove.html",
        "display-contents.html",
        "display-in-container.html",
        "display-none.html",
        "fieldset-legend-change.html",
        "flex-basis-with-container-type.html",
        "font-relative-calc-dynamic.html",
        "font-relative-units-dynamic.html",
        "font-relative-units.html",
        "fragmented-container-001.html",
        "get-animations.html",
        "grid-container.html",
        "grid-item-container.html",
        "idlharness.html",
        "iframe-in-container-invalidation.html",
        "iframe-invalidation.html",
        "ineligible-containment.html",
        "inheritance-from-container.html",
        "inline-size-and-min-width.html",
        "inline-size-bfc-floats.html",
        "inline-size-containment-vertical-rl.html",
        "inline-size-containment.html",
        "inner-first-line-non-matching.html",
        "layout-dependent-focus.html",
        "multicol-container-001.html",
        "multicol-inside-container.html",
        "multiple-size-containers-comma-separated-queries.html",
        "nested-query-containers.html",
        "never-match-container.html",
        "no-layout-containment-abspos-dynamic.html",
        "no-layout-containment-abspos.html",
        "no-layout-containment-baseline.html",
        "no-layout-containment-fixedpos-dynamic.html",
        "no-layout-containment-fixedpos.html",
        "no-layout-containment-scroll.html",
        "no-layout-containment-subgrid-crash.html",
        "orthogonal-wm-container-query.html",
        "percentage-padding-orthogonal.html",
        "pseudo-elements-001.html",
        "pseudo-elements-002.html",
        "pseudo-elements-002b.html",
        "pseudo-elements-003.html",
        "pseudo-elements-004.html",
        "pseudo-elements-006.html",
        "pseudo-elements-007.html",
        "pseudo-elements-008.html",
        "pseudo-elements-009.html",
        "pseudo-elements-010.html",
        "pseudo-elements-011.html",
        "pseudo-elements-012.html",
        "pseudo-elements-013.html",
        "query-container-name.html",
        "query-content-box.html",
        "query-evaluation.html",
        "reattach-container-with-dirty-child.html",
        "resize-while-content-visibility-hidden.html",
        "scrollbar-container-units-block.html",
        "scrollbar-container-units-inline.html",
        "sibling-layout-dependency.html",
        "size-container-*",
        "size-feature-evaluation.html",
        "size-query-with-var.html",
        "style-change-in-container.html",
        "style-not-sharing-float.html",
        "svg-foreignobject-child-container.html",
        "svg-foreignobject-no-size-container.html",
        "svg-g-no-size-container.html",
        "svg-root-size-container.html",
        "table-inside-container-changing-display.html",
        "top-layer-dialog-backdrop.html",
        "top-layer-dialog-container.html",
        "top-layer-dialog.html",
        "top-layer-nested-dialog.html",
        "transition-scrollbars.html",
        "transition-style-change-event-002.html",
        "transition-style-change-event.html",
        "unsupported-axis.html",
        "var-evaluation.html",
        "viewport-units-dynamic.html",
        "viewport-units.html",
        "whitespace-update-after-removal.html"
      ]
    }
  ],
  "container-style-queries": [
    {
      "testPath": "css/css-conditional/container-queries",
      "testFiles": [
        "at-container-style-*",
        "custom-property-style-*",
        "display-contents-dynamic-style-queries.html",
        "multiple-style-containers-comma-separated-queries.html",
        "nested-size-style-container-invalidation.html",
        "pseudo-elements-005.html",
        "query-evaluation-style.html",
        "registered-color-style-queries.html",
        "style-container-*",
        "style-query-*"
      ]
    }
  ],
  "print-color-adjust": [
    {
      "testPath": "css/css-color-adjust/parsing",
      "testFiles": [
        "print-color-adjust.html"
      ]
    }
  ],
  "content-visibility": [
    {
      "testPath": "css/css-contain/content-visibility",
      "testFiles": "**"
    }
  ],
  "align-content-block": [
    {
      "testPath": "css/css-align/blocks",
      "testFiles": [
        "align-content-block-*"
      ]
    }
  ],
  "font-optical-sizing": [
    {
      "testPath": "css/css-fonts/variations",
      "testFiles": [
        "variable-opsz*"
      ]
    },
    {
      "testPath": "css/css-fonts/parsing",
      "testFiles": [
        "font-optical-sizing-*"
      ]
    }
  ],
  "font-palette-animation": [
    {
      "testPath": "css/css-fonts/animations",
      "testFiles": [
        "font-palette-animation-not-specified-endpoints.html",
        "font-palette-interpolation.html",
        "multiple-elements-font-palette-animation.html"
      ]
    }
  ],
  "background-clip-text": [
    {
      "testPath": "css/css-backgrounds/background-clip",
      "testFiles": [
        "clip-text-*"
      ]
    }
  ],
  "pdf-viewer": [
    {
      "testPath": "html/webappapis/system-state-and-capabilities/the-navigator-object",
      "testFiles": [
        "plugins-and-mimetypes.html"
      ]
    }
  ],
  "parse-html-unsafe": [
    {
      "testPath": "html/webappapis/dynamic-markup-insertion/html-unsafe-methods",
      "testFiles": "**"
    }
  ],
  "template": [
    {
      "testPath": "html/syntax/parsing/template",
      "testFiles": "**"
    },
    {
      "testPath": "html/semantics/scripting-1/the-template-element",
      "testFiles": "**"
    }
  ],
  "autofill": [
    {
      "testPath": "html/semantics/selectors/pseudo-classes",
      "testFiles": [
        "autofill.html"
      ]
    }
  ],
  "default": [
    {
      "testPath": "html/semantics/selectors/pseudo-classes",
      "testFiles": [
        "default.html"
      ]
    }
  ],
  "indeterminate": [
    {
      "testPath": "html/semantics/selectors/pseudo-classes",
      "testFiles": [
        "checked-indeterminate.window.js",
        "indeterminate*"
      ]
    }
  ],
  "dialog": [
    {
      "testPath": "html/semantics/interactive-elements/the-dialog-element",
      "testFiles": "**"
    }
  ],
  "requestclose": [
    {
      "testPath": "html/semantics/interactive-elements/the-dialog-element",
      "testFiles": [
        "dialog-requestclose.html",
        "dialog-requestclose-*"
      ]
    }
  ],
  "details-name": [
    {
      "testPath": "html/semantics/interactive-elements/the-details-element",
      "testFiles": [
        "name-attribute.html"
      ]
    }
  ],
  "constraint-validation": [
    {
      "testPath": "html/semantics/forms/the-textarea-element",
      "testFiles": [
        "textarea-setcustomvalidity.html",
        "textarea-validity-clone.html",
        "textarea-validity-valueMissing-inside-datalist.html"
      ]
    },
    {
      "testPath": "html/semantics/forms/the-select-element",
      "testFiles": [
        "select-setcustomvalidity.html",
        "select-validity.html",
        "select-willvalidate-readonly-attribute.html"
      ]
    },
    {
      "testPath": "html/semantics/forms/the-output-element",
      "testFiles": [
        "output-setcustomvalidity.html",
        "output-validity.html"
      ]
    },
    {
      "testPath": "html/semantics/forms/the-input-element",
      "testFiles": [
        "input-checkvalidity.html",
        "input-setcustomvalidity.html",
        "input-validationmessage.html",
        "input-validity.html",
        "input-willvalidate.html"
      ]
    },
    {
      "testPath": "html/semantics/forms/the-form-element",
      "testFiles": [
        "form-checkvalidity.html"
      ]
    },
    {
      "testPath": "html/semantics/forms/the-fieldset-element",
      "testFiles": [
        "fieldset-checkvalidity.html",
        "fieldset-setcustomvalidity.html",
        "fieldset-validationmessage.html",
        "fieldset-validity.html",
        "fieldset-willvalidate.html"
      ]
    },
    {
      "testPath": "html/semantics/forms/the-button-element",
      "testFiles": [
        "button-checkvalidity.html",
        "button-setcustomvalidity.html",
        "button-validation.html",
        "button-validationmessage.html",
        "button-validity.html",
        "button-willvalidate-readonly-attribute.html",
        "button-willvalidate.html"
      ]
    },
    {
      "testPath": "html/semantics/forms/constraints",
      "testFiles": "**"
    },
    {
      "testPath": "html/semantics/embedded-content/the-object-element",
      "testFiles": [
        "object-setcustomvalidity.html"
      ]
    }
  ],
  "show-picker-select": [
    {
      "testPath": "html/semantics/forms/the-select-element",
      "testFiles": [
        "show-picker-*"
      ]
    }
  ],
  "progress": [
    {
      "testPath": "html/semantics/forms/the-progress-element",
      "testFiles": "**"
    }
  ],
  "meter": [
    {
      "testPath": "html/semantics/forms/the-meter-element",
      "testFiles": "**"
    }
  ],
  "show-picker-input": [
    {
      "testPath": "html/semantics/forms/the-input-element",
      "testFiles": [
        "show-picker-*"
      ]
    }
  ],
  "datalist": [
    {
      "testPath": "html/semantics/forms/the-datalist-element",
      "testFiles": "**"
    }
  ],
  "dirname": [
    {
      "testPath": "html/semantics/forms/attributes-common-to-form-controls",
      "testFiles": [
        "dirname-*"
      ]
    }
  ],
  "loading-lazy": [
    {
      "testPath": "html/semantics/embedded-content/the-img-element",
      "testFiles": [
        "*loading-lazy*",
        "image-loading-subpixel-clip.html",
        "move-element-and-scroll.html",
        "relevant-mutations-lazy.html",
        "remove-element-and-scroll.html",
        "scrolling-below-viewport-image-lazy-loading-in-iframe.html"
      ]
    },
    {
      "testPath": "html/semantics/embedded-content/the-iframe-element",
      "testFiles": [
        "iframe-loading-lazy*"
      ]
    }
  ],
  "preserves-pitch": [
    {
      "testPath": "html/semantics/embedded-content/media-elements",
      "testFiles": [
        "preserves-pitch.html"
      ]
    }
  ],
  "search": [
    {
      "testPath": "html/rendering/non-replaced-elements/flow-content-0",
      "testFiles": [
        "search-*"
      ]
    }
  ],
  "writingsuggestions": [
    {
      "testPath": "html/editing/editing-0/writing-suggestions",
      "testFiles": "**"
    }
  ],
  "canvas-2d-color-management": [
    {
      "testPath": "html/canvas/offscreen/wide-gamut-canvas",
      "testFiles": "**"
    },
    {
      "testPath": "html/canvas/element/wide-gamut-canvas",
      "testFiles": "**"
    },
    {
      "testPath": "html/canvas/offscreen/manual/wide-gamut-canvas",
      "testFiles": "**"
    },
    {
      "testPath": "html/canvas/element/manual/wide-gamut-canvas",
      "testFiles": "**"
    }
  ],
  "canvas-reset": [
    {
      "testPath": "html/canvas/offscreen/reset",
      "testFiles": "**"
    },
    {
      "testPath": "html/canvas/element/reset",
      "testFiles": "**"
    }
  ],
  "canvas-roundrect": [
    {
      "testPath": "html/canvas/offscreen/path-objects",
      "testFiles": [
        "2d.path.roundrect.*"
      ]
    },
    {
      "testPath": "html/canvas/element/path-objects",
      "testFiles": [
        "2d.path.roundrect.*"
      ]
    }
  ],
  "canvas-createconicgradient": [
    {
      "testPath": "html/canvas/offscreen/fill-and-stroke-styles",
      "testFiles": [
        "2d.gradient.conic.*"
      ]
    },
    {
      "testPath": "html/canvas/element/fill-and-stroke-styles",
      "testFiles": [
        "2d.gradient.conic.*"
      ]
    },
    {
      "testPath": "html/canvas/element/manual/fill-and-stroke-styles",
      "testFiles": [
        "conic-gradient.html",
        "conic-gradient-rotation.html"
      ]
    }
  ],
  "container-scroll-state-queries": [
    {
      "testPath": "css/css-conditional/container-queries/scroll-state",
      "testFiles": "**"
    }
  ],
  "color-scheme": [
    {
      "testPath": "css/css-color-adjust/rendering/dark-color-scheme",
      "testFiles": "**"
    }
  ],
  "css-modules": [
    {
      "testPath": "html/semantics/scripting-1/the-script-element/css-module",
      "testFiles": "**"
    }
  ]
}